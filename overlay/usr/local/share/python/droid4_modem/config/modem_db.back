PRAGMA foreign_keys=ON;
BEGIN TRANSACTION;
CREATE TABLE phone_book (id INTEGER PRIMARY KEY AUTOINCREMENT, phone_number VARCHAR(10) not null unique, nickname text unique, first_name text not null, last_name text, subject text, description text, date text CHECK (date IS datetime(date)), unique(first_name,last_name,subject));
CREATE TABLE message_status(id INTEGER PRIMARY KEY, name VARCHAR(10) not null);
INSERT INTO message_status VALUES(1,'unread');
INSERT INTO message_status VALUES(2,'read');
INSERT INTO message_status VALUES(3,'send');
INSERT INTO message_status VALUES(4,'send_fail');
CREATE TABLE messages (id INTEGER PRIMARY KEY AUTOINCREMENT, phone_number VARCHAR(10) not null, complete VARCHAR(1) DEFAULT 'y' check(complete = 'n' or complete = 'y'), msg text, phone_book_nickname text, date text CHECK (date IS datetime(date)), total_parts_number INTEGER not null DEFAULT 1, reference_number INTEGER,status INTEGER DEFAULT 1 not null , FOREIGN KEY (status) REFERENCES message_status (id) ON DELETE CASCADE ON UPDATE NO ACTION);
CREATE TABLE phones(phone VARCHAR(10) not null PRIMARY KEY,long_reference_number INTEGER DEFAULT 0 check(long_reference_number BETWEEN 0 and 65535),short_reference_number INTEGER DEFAULT 0 check(short_reference_number BETWEEN 0 and 255));
CREATE TABLE voice_call_status(id INTEGER DEFAULT 1 not null PRIMARY KEY, type text);
INSERT INTO voice_call_status VALUES(1,'incoming');
INSERT INTO voice_call_status VALUES(2,'dial');
INSERT INTO voice_call_status VALUES(3,'miss');
CREATE TABLE voice_call_list(id INTEGER PRIMARY KEY AUTOINCREMENT, phone VARCHAR(10) not null,date text CHECK (date IS datetime(date)),status INTEGER DEFAULT 1 not null, temp INTEGER unique check(temp = 1),FOREIGN KEY (status) REFERENCES  voice_call_status(id) ON DELETE CASCADE ON UPDATE NO ACTION);
CREATE TABLE notify_list(id INTEGER PRIMARY KEY AUTOINCREMENT, temp text DEFAULT 0 check(temp BETWEEN 0 and 1),line text);
CREATE TABLE pdus(id INTEGER PRIMARY KEY AUTOINCREMENT, pdu text not null unique, date text CHECK (date IS datetime(date)), msg_id INTEGER, sequence_part_number INTEGER DEFAULT 1, tmp_msg text DEFAULT null, FOREIGN KEY (msg_id) REFERENCES messages (id) ON DELETE CASCADE ON UPDATE NO ACTION, unique(msg_id, sequence_part_number));
COMMIT;
